import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        theme: ThemeData(primarySwatch: Colors.indigo),
        debugShowCheckedModeBanner: false,
        home: Scaffold(
          appBar: AppBar(title: Text('appTitle'),
              actions: <Widget>[
                IconButton(icon: Icon(Icons.search),    onPressed: () => { }),
                IconButton(icon: Icon(Icons.more_vert), onPressed: () => { })
              ]),
          floatingActionButton: new FloatingActionButton(
            onPressed: () => {print('xxx')},
            backgroundColor: Colors.red,
            child: new Icon(Icons.apps),
          ),
          bottomNavigationBar: new BottomNavigationBar(
            currentIndex: 0,
            items: [
              BottomNavigationBarItem(icon: new Icon(Icons.people), label:'People'),
              BottomNavigationBarItem(icon: new Icon(Icons.weekend), label: 'Weekend'),
              BottomNavigationBarItem(icon: new Icon(Icons.message), label: 'Message')
            ],
            fixedColor: Colors.blue,
            onTap: (int buttonIndex){print("Current value is: ${buttonIndex.toString()}");},
          ),
          drawer: Drawer(
              child:ListView(
                padding: EdgeInsets.zero,
                children:[
                  DrawerHeader(
                      decoration: BoxDecoration(color: Colors.blue),
                      child: FittedBox(fit: BoxFit.fill,
                          child: Image.network('https://i.ibb.co/df35Y8Q/2.png'))),

                  InkWell(
                      onTap: () async { },
                      child: Chip(
                          avatar : CircleAvatar(backgroundColor: Colors.green),
                          backgroundColor : Colors.grey.shade300,
                          label : Text("Active Status")
                      )),
                  /*
                Chip(
                  avatar : CircleAvatar(backgroundImage :NetworkImage("https://reqres.in/img/faces/1-image.jpg")),
                  backgroundColor : Colors.grey.shade300,
                  label : Text("Active Status")
                  ),
              */
                  ListTile(
                      leading: CircleAvatar(backgroundImage: NetworkImage("https://reqres.in/img/faces/1-image.jpg")),
                      title: Text("Rafie Tarabay"),
                      subtitle: Text("eng_rafie@mans.edu.eg"),
                      trailing: PopupMenuButton(
                          onSelected : (String result) { print(result); },
                          itemBuilder : (BuildContext context) => [
                            PopupMenuItem(value : "1", child : Text("CopyInfo")),
                            PopupMenuItem(value : "2", child : Text("Details") ),
                            PopupMenuItem(value : "3", child : Text("Edit")  )
                          ])),

                  ListTile(leading: Icon(Icons.home),       title: Text('Main'),   onTap: () { } ),
                  ListTile(leading: Icon(Icons.arrow_right),title: Text('Item 2'), onTap: () { } ),
                ],
              )),
          body: FutureBuilder(
              future: http.get(Uri.parse('https://reqres.in/api/users')),
              builder: (BuildContext ctx, AsyncSnapshot<dynamic> snapshot) {
                if (snapshot.connectionState != ConnectionState.done) return CircularProgressIndicator();
                if (snapshot.hasError) return Text('Oh no! Error! ${snapshot.error}');
                if (!snapshot.hasData) return Text('Nothing to show');

                int statusCode =snapshot.data.statusCode ;
                if (statusCode > 299) return Text('Server error: $statusCode');

                Map userData = json.decode(snapshot.data.body);
                List _users = userData["data"];
                print(_users);
                return ListView.builder(
                  itemCount: _users.length,
                  itemBuilder: (context, index) {
                    return ListTile(
                      leading: CircleAvatar(backgroundImage: NetworkImage(_users[index]['avatar'])),
                      title: Text(_users[index]['first_name'] + " " + _users[index]['last_name']),
                      subtitle: Text(_users[index]['email']),
                    );
                  },
                );
              })));


  }
}